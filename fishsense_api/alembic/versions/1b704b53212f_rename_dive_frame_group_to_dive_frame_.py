"""rename dive frame group to dive frame clusters

Revision ID: 1b704b53212f
Revises: 3f9de863fb12
Create Date: 2025-09-15 02:20:57.556505

"""
# pylint: skip-file

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1b704b53212f'
down_revision: Union[str, Sequence[str], None] = '3f9de863fb12'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('diveframecluster',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dive_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['dive_id'], ['dive.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('diveframeclusterimagemapping',
    sa.Column('dive_frame_cluster_id', sa.Integer(), nullable=False),
    sa.Column('image_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['dive_frame_cluster_id'], ['diveframecluster.id'], ),
    sa.ForeignKeyConstraint(['image_id'], ['image.id'], ),
    sa.PrimaryKeyConstraint('dive_frame_cluster_id', 'image_id')
    )
    op.drop_table('diveframegroupimagemapping')
    op.drop_table('diveframegroup')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('diveframegroupimagemapping',
    sa.Column('dive_frame_group_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('image_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['dive_frame_group_id'], ['diveframegroup.id'], name=op.f('diveframegroupimagemapping_dive_frame_group_id_fkey')),
    sa.ForeignKeyConstraint(['image_id'], ['image.id'], name=op.f('diveframegroupimagemapping_image_id_fkey')),
    sa.PrimaryKeyConstraint('dive_frame_group_id', 'image_id', name=op.f('diveframegroupimagemapping_pkey'))
    )
    op.create_table('diveframegroup',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('dive_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['dive_id'], ['dive.id'], name=op.f('diveframegroup_dive_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('diveframegroup_pkey'))
    )
    op.drop_table('diveframeclusterimagemapping')
    op.drop_table('diveframecluster')
    # ### end Alembic commands ###
